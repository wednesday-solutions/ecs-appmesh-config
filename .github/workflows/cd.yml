name: Node Express GraphQL Template CD

on:
  push:
    branches:
      - develop
      - main

jobs:
  # docker-build-push-deploy:
  # name: Docker build, push and deploy
  # runs-on: ubuntu-latest
  # steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Get branch name
  #     id: vars
  #     run: echo ::set-output name=stage::${GITHUB_REF#refs/*/}
  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ secrets.AWS_REGION }}
  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1

  #   - name: Build, tag, and push image to Amazon ECR
  #     env:
  #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}-${{steps.vars.outputs.stage}}
  #       AWS_REGION: ${{ secrets.AWS_REGION }}
  #       IMAGE_TAG: ${{ github.sha }}
  #     run: |
  #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG3
  #   - name: Render Amazon ECS task definition
  #     id: ecs-cd-starter-container
  #     uses: aws-actions/amazon-ecs-render-task-definition@v1
  #     with:
  #       task-definition: task-definition/${{steps.vars.outputs.stage}}.json #1
  #       container-name: ecs-cd-starter-${{steps.vars.outputs.stage}} #2
  #       image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}-${{steps.vars.outputs.stage}}:${{ github.sha }}
  #   - name: Deploy to Amazon ECS service
  #     uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #     with:
  #       task-definition: ${{ steps.ecs-cd-starter-container.outputs.task-definition }}
  #       service: ecs-cd-starter-${{ steps.vars.outputs.stage }}
  #       cluster: ecs-cd-starter-${{ steps.vars.outputs.stage }}
  #   - name: Logout of Amazon ECR
  #     if: always()
  #     run: docker logout ${{ steps.login-ecr.outputs.registry }}
